{
	"credit": "Created by FreshLX for Fresh Animations",
	"textureSize": [60, 44],
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [-1, -7.5, 3],
			"submodels": [
				{
					"id": "Created_by_FreshLX_for_Fresh_Animations",
					"invertAxis": "xy",
					"translate": [0, 0, 0]
				}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -16.5, -3.5],
			"submodels": [
				{
					"id": "body_rotation",
					"invertAxis": "xy",
					"translate": [0, 7.5, 3],
					"rotate": [-90, 0, 0],
					"boxes": [
						{"coordinates": [-2, 4.3, -4.4, 4, 1, 1], "textureOffset": [5, 38]},
						{"coordinates": [-4, 5, -4.5, 8, 1, 1], "textureOffset": [2, 35]},
						{"coordinates": [-4.5, -6, -4, 9, 12, 7], "textureOffset": [24, 17]}
					]
				},
				{
					"id": "tail2",
					"invertAxis": "xy",
					"translate": [0, 8.5, 10],
					"rotate": [-90, 0, 0],
					"boxes": [
						{"coordinates": [-2, -8, -2.5, 4, 9, 5], "textureOffset": [38, 2]}
					]
				},
				{
					"id": "head2",
					"invertAxis": "xy",
					"translate": [0, 7.5, -3],
					"boxes": [
						{"coordinates": [-6, -3, -2, 12, 3, 0], "textureOffset": [3, 41]},
						{"coordinates": [-4, -4, -5, 8, 6, 6], "textureOffset": [1, 5]}
					],
					"submodels": [
						{
							"id": "snout",
							"invertAxis": "xy",
							"translate": [-1, -4, -5],
							"boxes": [
								{"coordinates": [-1, 0, -3, 4, 2, 3], "textureOffset": [6, 18]},
								{"coordinates": [0, 2, -1, 2, 1, 1], "textureOffset": [25, 7]}
							]
						},
						{
							"id": "right_ear",
							"invertAxis": "xy",
							"translate": [2.5, 2, -1.5],
							"boxes": [
								{"coordinates": [-0.5, 0, -0.5, 2, 3, 1], "textureOffset": [8, 1]},
								{"coordinates": [-1.5, -1, 0, 4, 3, 0], "textureOffset": [33, 39]},
								{"coordinates": [0, 0, 0.5, 1, 1, 1], "textureOffset": [25, 1]}
							]
						},
						{
							"id": "left_ear",
							"invertAxis": "xy",
							"translate": [-2.5, 2, -1.5],
							"boxes": [
								{"coordinates": [-1.5, 0, -0.5, 2, 3, 1], "textureOffset": [15, 1]},
								{"coordinates": [-2.5, -1, 0, 4, 3, 0], "textureOffset": [42, 39]},
								{"coordinates": [-1, 0, 0.5, 1, 1, 1], "textureOffset": [25, 1]}
							]
						},
						{
							"id": "right_eye",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [3, -1, -5],
							"submodels": [
								{
									"id": "r_eye_pupil",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [-0.5, -0.5, 0],
									"submodels": [
										{
											"id": "r_eye_pupil_in",
											"invertAxis": "xy",
											"mirrorTexture": "u",
											"translate": [-0.5, 0, 0],
											"submodels": [
												{
													"id": "r_eye_pupil_ou",
													"invertAxis": "xy",
													"mirrorTexture": "u",
													"translate": [1, 0, 0],
													"submodels": [
														{
															"id": "r_eye_pupil_do",
															"invertAxis": "xy",
															"mirrorTexture": "u",
															"translate": [-0.5, -0.5, 0],
															"submodels": [
																{
																	"id": "r_eye_pupil_up",
																	"invertAxis": "xy",
																	"translate": [0, 1, 0],
																	"boxes": [
																		{
																			"coordinates": [-0.5, -1, -0.03, 1, 1, 0.025],
																			"uvNorth": [4, 19, 5, 20],
																			"uvEast": [4, 19, 5, 20],
																			"uvSouth": [4, 19, 5, 20],
																			"uvWest": [4, 19, 5, 20],
																			"uvUp": [5, 19, 4, 20],
																			"uvDown": [5, 19, 4, 20],
																			"sizeAdd": 0.005
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"id": "right_eyelid",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [-1, -1, 1],
									"submodels": [
										{
											"id": "right_blink",
											"invertAxis": "xy",
											"translate": [0, 1.015, 0],
											"boxes": [
												{
													"coordinates": [0, -1.015, -0.03, 1, 1, 1.025],
													"uvNorth": [4, 18, 5, 19],
													"uvEast": [4, 18, 5, 19],
													"uvSouth": [4, 18, 5, 19],
													"uvWest": [4, 18, 5, 19],
													"uvUp": [5, 19, 4, 18],
													"uvDown": [5, 18, 4, 19],
													"sizeAdd": 0.015
												}
											]
										}
									]
								}
							]
						},
						{
							"id": "left_eye",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [-3, -1, -5],
							"submodels": [
								{
									"id": "l_eye_pupil",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [0.5, -0.5, 0],
									"submodels": [
										{
											"id": "l_eye_pupil_in",
											"invertAxis": "xy",
											"mirrorTexture": "u",
											"translate": [-0.5, 0, 0],
											"submodels": [
												{
													"id": "l_eye_pupil_ou",
													"invertAxis": "xy",
													"mirrorTexture": "u",
													"translate": [1, 0, 0],
													"submodels": [
														{
															"id": "l_eye_pupil_do",
															"invertAxis": "xy",
															"mirrorTexture": "u",
															"translate": [-0.5, -0.5, 0],
															"submodels": [
																{
																	"id": "l_eye_pupil_up",
																	"invertAxis": "xy",
																	"translate": [0, 1, 0],
																	"boxes": [
																		{
																			"coordinates": [-0.5, -1, -0.03, 1, 1, 0.025],
																			"uvNorth": [6, 19, 7, 20],
																			"uvEast": [6, 19, 7, 20],
																			"uvSouth": [6, 19, 7, 20],
																			"uvWest": [7, 19, 6, 20],
																			"uvUp": [7, 19, 6, 20],
																			"uvDown": [7, 19, 6, 20],
																			"sizeAdd": 0.005
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"id": "left_eyelid",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [1, -1, 1],
									"submodels": [
										{
											"id": "left_blink",
											"invertAxis": "xy",
											"translate": [0, 1.015, 0],
											"boxes": [
												{
													"coordinates": [-1, -1.015, -0.03, 1, 1, 1.025],
													"uvNorth": [6, 18, 7, 19],
													"uvEast": [6, 18, 7, 19],
													"uvSouth": [6, 18, 7, 19],
													"uvWest": [6, 18, 7, 19],
													"uvUp": [7, 19, 6, 18],
													"uvDown": [7, 18, 6, 19],
													"sizeAdd": 0.015
												}
											]
										}
									]
								}
							]
						}
					]
				}
			],
			"animations": [
				{
					"var.hy": "clamp(head_yaw,-90,90)",
					"var.child_scale": "if(is_child, 0.5, 1)",
					"var.r": "random(id)*pi*4",
					"var.b": "var.r+age/if(is_child, 5, 10)",
					"var.ls": "limb_swing/if(is_child, 1.5, 1)",
					"var.swim": "var.r +age/if(is_child, 1.4, 2.1)",
					"var.run": "clamp(if(limb_speed>=if(is_child, 0.4, 0.85), min(20, var.run +0.1 *frame_time*20), max(0, var.run -0.1 *frame_time*20)), 0, if(is_child, 1.2, 1))",
					"var.walk": "clamp(1-var.run, 0, 1)",
					"var.sleep": " if(body.rz!=0  , 1, 0)",
					"var.pounce": "if(body.rx>pi/2, 1, 0)",
					"var.Lear": "clamp( cos(          var.r +age/20 ) *20 -20 +1 , 0 , clamp( sin( var.r +age/(20*12) )*8 -5 , 0 , 1 ) )",
					"var.Rear": "clamp( cos( pi/1.52 +var.r +age/15 ) *15 -15 +1 , 0 , clamp( sin( var.r +age/(15*12) )*8 -5 , 0 , 1 ) )"
				},
				{
					"head2.rx": "-if(!is_on_ground&&is_in_water, torad(10), (-sin(torad(-90)+var.ls)/8*limb_speed)*var.run ) +if(is_on_ground||is_in_water, -body.rx +torad(head_pitch)/1.3, torad(-90)) +if(var.sleep==1, torad(88) +cos(torad(45)+var.b)/40, is_sitting, if(is_on_ground, 0, torad(60)), 0)",
					"head2.ry": " if(!is_on_ground&&is_in_water, 0, (sin(torad(5) +var.ls)/10*limb_speed)*var.walk ) +if(var.sleep==1, if(is_child, torad(-10), torad(-22)), var.pounce==1, -head.ry*2, 0) +torad(var.hy)*if(is_sitting, 0.6, 0) -torad(var.hy)/20",
					"head2.rz": "-if(!is_on_ground&&is_in_water, 0, if(var.sleep==1, if(is_child, torad(-85), torad(-80)), 0)*var.walk ) +body.ry -torad(var.hy)/if(is_sitting, 3, 1.21)",
					"head2.tx": "if(var.sleep==1, if(is_child, 3, 1), 0)",
					"head2.tz": " 2  +if(is_child, 1.2, 0) +if(!is_on_ground&&is_in_water, -1, sin(torad(-45)+var.ls)*limb_speed*var.run ) +if(var.sleep==1, if(is_child, -0.5, 3), var.pounce==1, -1.5 +sin(var.b+torad(45))/4, is_sitting, -0.5, sin(var.b+torad(45))/4 +1)",
					"head2.ty": "-13.5 +if(is_child, 0.5, 0) +if(!is_on_ground&&is_in_water,  1, is_sitting, if(is_child, -3, -0.5) +sin(var.b+torad(45))/4, 0)",
					"head2.sx": "if(is_child, 1.5, 1)",
					"head2.sy": "head2.sx",
					"head2.sz": "head2.sx",
					"body_rotation.rx": "if(!is_on_ground&&is_in_water, sin(limb_swing+age/2)/10, sin(torad(180+22.5)+var.ls)/6*limb_speed*var.run ) +if(var.sleep==1, 0, sin(var.b-torad(90))/60)",
					"body_rotation.ry": "if(!is_on_ground&&is_in_water,  0                      , sin(torad( 45)+var.ls)/10*limb_speed*var.walk )",
					"body_rotation.rz": "if(!is_on_ground&&is_in_water,  0                      , sin(torad( 45)+var.ls)/20*limb_speed*var.walk ) -torad(var.hy)/5",
					"body_rotation.tx": "if(var.sleep==1, -1 +sin(var.b)/8, 0)",
					"body_rotation.ty": "-7.5 +if(is_sitting, 1 +sin(var.b)/8, 0)",
					"body_rotation.tz": "if(!is_on_ground&&is_in_water, -2                      , sin(torad(-90)+var.ls)*limb_speed*var.run -limb_speed*var.walk ) +3 +if(var.sleep==1, 2, is_sitting, -2, sin(var.b)/6)",
					"head.rx": "if(is_on_ground||is_in_water, 0, head2.rx)",
					"head.ry": "head2.ry",
					"head.rz": "head2.rz",
					"head.tx": "( head.tx +if(var.sleep==1, if(is_child, -2  , -2 ), 0) +head2.tx )*var.child_scale +if(is_child, -0.25, 0)",
					"head.ty": "( head.ty +if(var.sleep==1, if(is_child, 19.7, 0.2), !is_on_ground&&is_in_water, if(is_child, -4, -2), is_sitting, head2.ty +if(is_child,  14.9*2 +0.3, 14.9)                        , -head2.tz +if(is_child,  23.3,  3 ) ) )*var.child_scale +if(is_child, 1, 0)",
					"head.tz": "( head.tz +if(var.sleep==1, if(is_child, -6  , -1 ), !is_on_ground&&is_in_water, if(is_child, -4, -2), is_sitting, head2.tz +if(is_child, -6.25*2     , -5.5) +sin(var.b+torad(45))/8, -head2.ty +if(is_child, -22  , -14) ) )*var.child_scale +if(is_child, 2.75, 0)"
				},
				{
					"leg1.rx": "if(!is_on_ground&&is_in_water,  sin(limb_swing+age/2)/2, sin(torad( 0 )+var.ls)*limb_speed*var.run +sin(torad(-90)+var.ls)*limb_speed*var.walk ) +if(is_sitting, torad(-85), 0) -sin(var.b)/60 -torad(var.hy)/10",
					"leg2.rx": "if(!is_on_ground&&is_in_water, -sin(limb_swing+age/2)/2, sin(torad(-45)+var.ls)*limb_speed*var.run +sin(torad( 90)+var.ls)*limb_speed*var.walk ) +if(is_sitting, torad(-85), 0) -sin(var.b)/60 +torad(var.hy)/10",
					"leg3.rx": "if(!is_on_ground&&is_in_water, -sin(limb_swing+age/2)/2, sin(torad( 90)+var.ls)*limb_speed*var.run +sin(torad(180)+var.ls)*limb_speed*var.walk ) +if(body.rx> torad(90), torad(-30), is_sitting, torad(-5) +sin(var.b)/40, sin(var.b)/60) -torad(var.hy)/10",
					"leg4.rx": "if(!is_on_ground&&is_in_water,  sin(limb_swing+age/2)/2, sin(torad(135)+var.ls)*limb_speed*var.run +sin(torad( 0 )+var.ls)*limb_speed*var.walk ) +if(body.rx> torad(90), torad(-30), is_sitting, torad(-5) +sin(var.b)/40, sin(var.b)/60) +torad(var.hy)/10",
					"leg1.ry": "torad( 5)*clamp(1-limb_speed*4, 0, 1) +torad(var.hy)/5 +if(is_sitting,  torad(5), 0)",
					"leg2.ry": "torad(-5)*clamp(1-limb_speed*4, 0, 1) +torad(var.hy)/5 +if(is_sitting, -torad(5), 0)",
					"leg3.ry": "torad(-5)*clamp(1-limb_speed*4, 0, 1) +torad(var.hy)/5     +if(var.pounce==1, torad( 30), 0)",
					"leg4.ry": "torad( 5)*clamp(1-limb_speed*4, 0, 1) +torad(var.hy)/5     +if(var.pounce==1, torad(-30), 0)",
					"leg1.rz": "if(!is_on_ground&&is_in_water, torad( 5), var.pounce==1, torad( 20), is_sitting, torad( 10), 0) +if(is_sitting, -torad(var.hy)/16, torad(var.hy)/8)",
					"leg2.rz": "if(!is_on_ground&&is_in_water, torad(-5), var.pounce==1, torad(-20), is_sitting, torad(-10), 0) +if(is_sitting, -torad(var.hy)/16, torad(var.hy)/8)",
					"leg3.rz": "if(!is_on_ground&&is_in_water, torad( 5), var.pounce==1, torad( 20), is_sitting, torad(-5 ), -torad(5)) -torad(var.hy)/8",
					"leg4.rz": "if(!is_on_ground&&is_in_water, torad(-5), var.pounce==1, torad(-20), is_sitting, torad( 5 ),  torad(5)) -torad(var.hy)/8",
					"leg1.tx": "(-2.1 +if(var.pounce==1, -2, is_sitting, -1.5,  0  ) ) * var.child_scale",
					"leg2.tx": "( 2.1 +if(var.pounce==1,  2, is_sitting,  1.5,  0  ) ) * var.child_scale",
					"leg3.tx": "(-1.9 +if(var.pounce==1, -3, is_sitting,  0.7,  0.5) ) * var.child_scale",
					"leg4.tx": "( 1.9 +if(var.pounce==1,  3, is_sitting, -0.7, -0.5) ) * var.child_scale",
					"leg1.ty": "( 24 +if(!is_on_ground&&is_in_water, 1 +sin(torad( 90)+limb_swing+age/2)*1.5, clamp((-1.5 +sin(torad(  90)+var.ls)*2)*limb_speed*var.run +(sin(torad( 0 )+var.ls)*2.5*limb_speed)*var.walk, -6, 0)) +if(is_sitting, -1, 0) ) * var.child_scale +if(is_child, 12, 0)",
					"leg2.ty": "( 24 +if(!is_on_ground&&is_in_water, 1 +sin(torad(-90)+limb_swing+age/2)*1.5, clamp((-1.5 +sin(torad(  45)+var.ls)*2)*limb_speed*var.run +(sin(torad(180)+var.ls)*2.5*limb_speed)*var.walk, -6, 0)) +if(is_sitting, -1, 0) ) * var.child_scale +if(is_child, 12, 0)",
					"leg3.ty": "( 24 +if(!is_on_ground&&is_in_water, 1 +sin(torad(-90)+limb_swing+age/2)*1.5, clamp((-1.5 +sin(torad( 180)+var.ls)*2)*limb_speed*var.run +(sin(torad(-90)+var.ls)*2.5*limb_speed)*var.walk, -6, 0))                        ) * var.child_scale +if(is_child, 12, 0)",
					"leg4.ty": "( 24 +if(!is_on_ground&&is_in_water, 1 +sin(torad( 90)+limb_swing+age/2)*1.5, clamp((-1.5 +sin(torad(-135)+var.ls)*2)*limb_speed*var.run +(sin(torad( 90)+var.ls)*2.5*limb_speed)*var.walk, -6, 0))                        ) * var.child_scale +if(is_child, 12, 0)",
					"leg1.tz": "( 7 +if(!is_on_ground&&is_in_water,  sin(limb_swing+age/2)*2, sin(torad( 0 )+var.ls)*6*limb_speed*var.run +sin(torad(-90)+var.ls)*6*limb_speed*var.walk ) +if(                   is_sitting, -10 , 0) ) * var.child_scale",
					"leg2.tz": "( 7 +if(!is_on_ground&&is_in_water, -sin(limb_swing+age/2)*2, sin(torad(-45)+var.ls)*6*limb_speed*var.run +sin(torad( 90)+var.ls)*6*limb_speed*var.walk ) +if(                   is_sitting, -10 , 0) ) * var.child_scale",
					"leg3.tz": "(    if(!is_on_ground&&is_in_water, -sin(limb_swing+age/2)*2, sin(torad( 90)+var.ls)*6*limb_speed*var.run +sin(torad(180)+var.ls)*6*limb_speed*var.walk ) +if(var.pounce==1, -2, is_sitting, -3.5, 0) ) * var.child_scale",
					"leg4.tz": "(    if(!is_on_ground&&is_in_water,  sin(limb_swing+age/2)*2, sin(torad(135)+var.ls)*6*limb_speed*var.run +sin(torad( 0 )+var.ls)*6*limb_speed*var.walk ) +if(var.pounce==1, -2, is_sitting, -3.5, 0) ) * var.child_scale"
				},
				{
					"tail2.rx": "if(!is_on_ground&&is_in_water, torad(10) -body_rotation.rx/2, (sin(torad(90)+var.ls)/3 +sin(torad(180+22.5)+var.ls)/6)*limb_speed*var.run +sin(torad(45)+var.ls)/10*limb_speed*var.walk )     +if(var.sleep==1, torad(-150), var.pounce==1, torad(30) -torad(30)*limb_speed, is_sitting, torad(-20) -body_rotation.rx, torad(-30) +torad(30)*limb_speed) +if(var.sleep==1, 0, -cos(var.b)/20)",
					"tail2.ry": "if(!is_on_ground&&is_in_water, 0                            ,                                                                              sin(torad(90)+var.ls)/6 *limb_speed*var.walk ) +if(!is_on_ground&&is_in_water, 0, var.pounce==1, 0                              , is_sitting, torad( 50 ), torad(var.hy)/6)",
					"tail2.rz": "if(                                                                                                                    var.sleep==1,      -cos(var.b)/40, var.pounce==1, -body.ry*3, is_sitting, torad(-120), torad(var.hy)/5) +if(head_pitch==0, -torad(var.hy)*limb_speed, 0)",
					"tail2.tx": "if(                                                                                                                    var.sleep==1, -1                                              , var.pounce==1, 0         , is_sitting, 0, torad(var.hy))",
					"tail2.ty": "if(                                                                                                                    var.sleep==1, 0.5                                             , var.pounce==1, 0         , is_sitting, 1, 0) -1.5",
					"tail2.tz": "if(!is_on_ground&&is_in_water, -2 +sin(limb_swing+age/2)/3, var.sleep==1, -1, var.pounce==1, 0, is_sitting, 1, (sin(torad(-90)+var.ls) +sin(torad(180+22.5)+var.ls)/2)*limb_speed*var.run -limb_speed*var.walk +sin(var.b)/6) +3"
				},
				{
					"snout.rx": "(torad(-3)+sin(var.r+age*1.5)/20) *clamp(-1.5 +sin(var.r+age/10)*4 -cos(var.r+age/23)*4, if(head_pitch!=0, 1, 0), 1)",
					"right_ear.rx": "torad( 5 +60*clamp( (  sin(       pi/4 +(var.r+age)/2 ) +sin(       (var.r+age) )  ) *var.Rear -1 , 0 , 1-var.pounce ) +head_pitch/4 -20*limb_speed ) +if(var.sleep==1, torad(30) +sin(var.b)/30, 0)",
					"left_ear.rx": " torad( 5 +60*clamp( (  sin(       pi/4 +(var.r+age)/2 ) +sin(       (var.r+age) )  ) *var.Lear -1 , 0 , 1-var.pounce ) +head_pitch/4 -20*limb_speed ) +if(var.sleep==1, torad(45) +sin(var.b)/30, 0)",
					"right_ear.ry": "torad( 2 +45*clamp( (  sin(-pi/8 +pi/4 +(var.r+age)/2 ) +sin(-pi/8 +(var.r+age) )  ) *var.Rear -1 , 0 , 1-var.pounce ) ) +clamp(torad(var.hy)/2 +torad(45)*clamp(-8 +sin(var.r+age/87)*25, limb_speed, 1) +if(var.sleep==1, torad( 60), var.pounce==1, torad( 60), 0), torad(-5), torad(90))",
					"left_ear.ry": " torad(-2 -45*clamp( (  sin(-pi/8 +pi/4 +(var.r+age)/2 ) +sin(-pi/8 +(var.r+age) )  ) *var.Lear -1 , 0 , 1-var.pounce ) ) +clamp(torad(var.hy)/2 -torad(45)*clamp(-8 +sin(var.r+age/87)*25, limb_speed, 1) +if(var.sleep==1, torad(-60), var.pounce==1, torad(-60), 0), torad(-90), torad(5))",
					"right_ear.rz": "torad(-10) +if(!is_on_ground&&is_in_water, 0,  sin(torad(-90)+var.ls)/6 *limb_speed*var.run +sin(torad(-135)+var.ls)/6*limb_speed*var.walk )",
					"left_ear.rz": " torad( 10) +if(!is_on_ground&&is_in_water, 0, -sin(torad(-90)+var.ls)/6 *limb_speed*var.run +sin(torad(-135)+var.ls)/6*limb_speed*var.walk )",
					"right_blink.sy": "clamp((1.5 -abs(sin(var.r+age/7)*6))*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, 0, 1), clamp(head_pitch/120, 0, 0.4), 1)",
					"left_blink.sy": "right_blink.sy"
				},
				{
					"right_eyelid.sz": "if(right_eyelid.sy==0||right_blink.sy==0, 0, 1)",
					"right_eyelid.tz": "0",
					"left_eyelid.sz": "if(left_eyelid.sy==0||left_blink.sy==0, 0, 1)",
					"left_eyelid.tz": "0"
				},
				{
					"head_part.rx": "head2.rx",
					"head_part.ry": "head2.ry",
					"head_part.rz": "head2.rz",
					"head_part.tx": "head2.tx",
					"head_part.ty": "head2.ty+16.5",
					"head_part.tz": "head2.tz-3.5",
					"body_part.rx": "body_rotation.rx",
					"body_part.ry": "body_rotation.ry",
					"body_part.rz": "body_rotation.rz",
					"body_part.tx": "body_rotation.tx",
					"body_part.ty": "body_rotation.ty+16.5",
					"body_part.tz": "body_rotation.tz-3.5",
					"tail_part.rx": "tail2.rx",
					"tail_part.ry": "tail2.ry",
					"tail_part.rz": "tail2.rz",
					"tail_part.tx": "tail2.tx",
					"tail_part.ty": "tail2.ty+16.5",
					"tail_part.tz": "tail2.tz-3.5"
				}
			]
		},
		{
			"part": "leg1",
			"id": "leg1",
			"invertAxis": "xy",
			"translate": [-2, 0, -7],
			"boxes": [
				{"coordinates": [1.001, 0, 6, 2, 6, 2], "textureOffset": [13, 24]},
				{"coordinates": [1, 0, 5.5, 2, 1, 1], "textureOffset": [1, 1]}
			]
		},
		{
			"part": "leg2",
			"id": "leg2",
			"invertAxis": "xy",
			"translate": [2, 0, -7],
			"boxes": [
				{"coordinates": [-3, 0, 5.5, 2, 1, 1], "textureOffset": [1, 1]},
				{"coordinates": [-3.001, 0, 6, 2, 6, 2], "textureOffset": [4, 24]}
			]
		},
		{
			"part": "leg3",
			"id": "leg3",
			"invertAxis": "xy",
			"translate": [-2, 0, 0],
			"boxes": [
				{"coordinates": [1.001, 0, -1, 2, 6, 2], "textureOffset": [13, 24]},
				{"coordinates": [1, 0, -1.5, 2, 1, 1], "textureOffset": [1, 1]}
			]
		},
		{
			"part": "leg4",
			"id": "leg4",
			"invertAxis": "xy",
			"translate": [2, 0, 0],
			"boxes": [
				{"coordinates": [-3.001, 0, -1, 2, 6, 2], "textureOffset": [4, 24]},
				{"coordinates": [-3, 0, -1.5, 2, 1, 1], "textureOffset": [1, 1]}
			]
		},
		{
			"part": "tail",
			"id": "tail",
			"invertAxis": "xy",
			"translate": [-4, -11, -10],
			"submodels": [
				{
					"id": "tail_rotation",
					"invertAxis": "xy",
					"translate": [-4, 11, 10]
				}
			],
			"animations": [
				{
					"var.hy": "clamp(head_yaw,-90,90)",
					"tail_rotation.rx": "0"
				}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "leg1",
			"id": "leg1",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "leg2",
			"id": "leg2",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "leg3",
			"id": "leg3",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "leg4",
			"id": "leg4",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "leg1",
			"id": "leg1",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "leg2",
			"id": "leg2",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "leg3",
			"id": "leg3",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "leg4",
			"id": "leg4",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		}
	]
}