{
	"credit": "Created by FreshLX for Fresh Animations",
	"textureSize": [64, 32],
	"models": [
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -19, -2],
			"texture": "sheep.png",
			"textureSize": [64, 32],
			"submodels": [
				{
					"id": "Created_by_FreshLX_for_Fresh_Animations",
					"invertAxis": "xy",
					"translate": [0, 0, 0]
				},
				{
					"id": "rotation",
					"invertAxis": "xy",
					"translate": [0, 13, 2],
					"rotate": [-90, 0, 0],
					"boxes": [
						{"coordinates": [-4, -6, -1, 8, 16, 6], "textureOffset": [28, 8]}
					],
					"submodels": [
						{
							"id": "bone",
							"invertAxis": "xy",
							"translate": [0, -7.20901, 4.85217],
							"rotate": [100, 0, 0],
							"submodels": [
								{
									"id": "rotate2",
									"invertAxis": "xy",
									"translate": [0, 0, 0],
									"rotate": [25, 0, 0],
									"boxes": [
										{"coordinates": [-1, -2, -2.5, 2, 2, 2], "textureOffset": [50, 4]}
									]
								}
							]
						}
					]
				},
				{
					"id": "head2",
					"invertAxis": "xy",
					"translate": [0, 18, -8],
					"boxes": [
						{"coordinates": [-3, -2, -5, 6, 6, 7.5], "textureOffset": [1, 1]},
						{"coordinates": [-4, 3, -3, 3, 2, 3], "textureOffset": [16, 19]},
						{"coordinates": [-5, 2, -1, 2, 2, 2], "textureOffset": [56, 12]},
						{"coordinates": [-5, -1, -1, 2, 3, 2], "textureOffset": [50, 9], "sizeAdd": -0.01},
						{"coordinates": [-5, -2.6, -3, 2, 2, 3], "textureOffset": [17, 24], "sizeAdd": -0.1}
					],
					"submodels": [
						{
							"id": "horns",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, -18, 8],
							"boxes": [
								{"coordinates": [1, 21, -11, 3, 2, 3], "textureOffset": [16, 19]},
								{"coordinates": [3, 20, -9, 2, 2, 2], "textureOffset": [56, 12]},
								{"coordinates": [3, 17, -9, 2, 3, 2], "textureOffset": [50, 9], "sizeAdd": -0.01},
								{"coordinates": [3, 15.4, -11, 2, 2, 3], "textureOffset": [17, 24], "sizeAdd": -0.1}
							]
						},
						{
							"id": "left_ear",
							"invertAxis": "xy",
							"translate": [-3, 3, -2],
							"rotate": [0, 0, 27.5],
							"boxes": [
								{
									"coordinates": [-3.652, -2.4, -1.3, 5, 2, 2],
									"uvNorth": [29, 6, 34, 8],
									"uvEast": [27, 6, 29, 8],
									"uvSouth": [22, 6, 27, 8],
									"uvWest": [20, 6, 22, 8],
									"uvUp": [27, 6, 22, 4],
									"uvDown": [32, 4, 27, 6]
								}
							]
						},
						{
							"id": "right_ear",
							"invertAxis": "xy",
							"translate": [3, 3, -2],
							"rotate": [0, 0, -27.5],
							"boxes": [
								{
									"coordinates": [-1.7, -2.4, -1.3, 5, 2, 2],
									"uvNorth": [38, 6, 43, 8],
									"uvEast": [36, 6, 38, 8],
									"uvSouth": [45, 6, 50, 8],
									"uvWest": [43, 6, 45, 8],
									"uvUp": [43, 6, 38, 4],
									"uvDown": [48, 4, 43, 6]
								}
							]
						},
						{
							"id": "snout",
							"invertAxis": "xy",
							"translate": [1, 2, 0],
							"rotate": [-10, 0, 0],
							"boxes": [
								{"coordinates": [-3, -2.17365, -7.01519, 4, 2, 3], "textureOffset": [14, 14]}
							]
						},
						{
							"id": "right_eye",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [2, 2, -6],
							"submodels": [
								{
									"id": "r_eye_top",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [0, 0, 0.025]
								},
								{
									"id": "r_eye_pupil",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [0.5, -0.5, 1],
									"submodels": [
										{
											"id": "r_eye_pupil_in",
											"invertAxis": "xy",
											"mirrorTexture": "u",
											"translate": [-0.5, 0, 0],
											"submodels": [
												{
													"id": "r_eye_pupil_ou",
													"invertAxis": "xy",
													"mirrorTexture": "u",
													"translate": [1, 0, 0],
													"submodels": [
														{
															"id": "r_eye_pupil_do",
															"invertAxis": "xy",
															"mirrorTexture": "u",
															"translate": [-0.5, -0.5, 0],
															"submodels": [
																{
																	"id": "r_eye_pupil_up",
																	"invertAxis": "xy",
																	"translate": [0, 1, 0],
																	"boxes": [
																		{
																			"coordinates": [-0.5, -1, -0.055, 1, 1, 1],
																			"uvNorth": [21, 2, 22, 3],
																			"uvEast": [21, 2, 22, 3],
																			"uvSouth": [22, 2, 23, 3],
																			"uvWest": [22, 2, 23, 3],
																			"uvUp": [22, 2, 21, 3],
																			"uvDown": [23, 2, 22, 3],
																			"sizeAdd": 0.005
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"id": "right_eyelid",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [0, -1, 1],
									"submodels": [
										{
											"id": "right_blink",
											"invertAxis": "xy",
											"translate": [0, 1.015, 0],
											"boxes": [
												{
													"coordinates": [0, -1.015, 0.92, 1, 1, 1],
													"uvNorth": [21, 1, 23, 2],
													"uvEast": [21, 1, 22, 2],
													"uvSouth": [21, 1, 23, 2],
													"uvWest": [21, 1, 23, 2],
													"uvUp": [23, 1, 21, 2],
													"uvDown": [23, 1, 21, 2],
													"sizeAdd": 0.015
												}
											]
										}
									]
								}
							]
						},
						{
							"id": "left_eye",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [-2, 2, -6],
							"submodels": [
								{
									"id": "l_eye_top",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [0, 0, 0.025]
								},
								{
									"id": "l_eye_pupil",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [-0.5, -0.5, 1],
									"submodels": [
										{
											"id": "l_eye_pupil_in",
											"invertAxis": "xy",
											"mirrorTexture": "u",
											"translate": [-0.5, 0, 0],
											"submodels": [
												{
													"id": "l_eye_pupil_ou",
													"invertAxis": "xy",
													"mirrorTexture": "u",
													"translate": [1, 0, 0],
													"submodels": [
														{
															"id": "l_eye_pupil_do",
															"invertAxis": "xy",
															"mirrorTexture": "u",
															"translate": [-0.5, -0.5, 0],
															"submodels": [
																{
																	"id": "l_eye_pupil_up",
																	"invertAxis": "xy",
																	"translate": [0, 1, 0],
																	"boxes": [
																		{
																			"coordinates": [-0.5, -1, -0.055, 1, 1, 1],
																			"uvNorth": [24, 2, 25, 3],
																			"uvEast": [24, 2, 25, 3],
																			"uvSouth": [25, 2, 26, 3],
																			"uvWest": [25, 2, 26, 3],
																			"uvUp": [25, 2, 24, 3],
																			"uvDown": [26, 2, 25, 3],
																			"sizeAdd": 0.005
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"id": "left_eyelid",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [0, -1, 1],
									"submodels": [
										{
											"id": "left_blink",
											"invertAxis": "xy",
											"translate": [0, 1.015, 0],
											"boxes": [
												{
													"coordinates": [-1, -1.015, 0.92, 1, 1, 1],
													"uvNorth": [24, 1, 26, 2],
													"uvEast": [24, 1, 26, 2],
													"uvSouth": [24, 1, 26, 2],
													"uvWest": [24, 1, 26, 2],
													"uvUp": [26, 2, 24, 1],
													"uvDown": [26, 1, 24, 2],
													"sizeAdd": 0.015
												}
											]
										}
									]
								}
							]
						}
					]
				}
			],
			"animations": [
				{
					"var.hy": "clamp(head_yaw,-90,90)",
					"var.child_scale": "if(is_child, 0.5, 1)",
					"var.r": "random(id)*pi*4",
					"var.ls": "limb_swing*if(is_child, 0.55, 0.85)",
					"var.b": "var.r +age/if(is_child, 5.5, 11)",
					"var.swim": "var.r +age/if(is_child, 1.8, 2.5)",
					"var.run": "clamp(if(frame_counter == var.frame_counter_prev, var.run, limb_speed>=if(is_child, 0.52, 0.62), min(20, var.run +0.1 *frame_time*20), max(0, var.run -0.1 *frame_time*20)), 0, if(is_child, 1.5, 1))",
					"var.walk": "clamp(1-var.run, 0, 1)",
					"var.eatA": "clamp(if(frame_counter == var.frame_counter_prev, var.eatA, (head.ty-6)!=0 && (head.rx-torad(head_pitch))!=0, min(20, var.eatA +0.1 *frame_time*20), max(0, var.eatA -0.1 *frame_time*20) ), 0, 1)",
					"var.eat": "(0.5-0.5*cos( var.eatA*pi ))",
					"var.Lear": "clamp( cos(          var.r +age/20 ) *20 -20 +1 , 0 , clamp( sin( var.r +age/(20*12) )*8 -5 , 0 , 1 ) )",
					"var.Rear": "clamp( cos( pi/1.52 +var.r +age/15 ) *15 -15 +1 , 0 , clamp( sin( var.r +age/(15*12) )*8 -5 , 0 , 1 ) )",
					"var.frame_counter_prev": "frame_counter"
				},
				{
					"body.rx": "pi/2",
					"head2.rx": "-if(!is_on_ground&&is_in_water, -sin(var.swim)/10, (-sin(var.ls)/9*limb_speed)*var.run +(sin(var.ls*2)/14*limb_speed)*var.walk ) +torad(-90) +sin(var.b+torad(90))/70 +(torad(-5)*limb_speed) +torad(40+9*sin(age))*var.eat +torad(head_pitch)*(1-var.eat)",
					"head2.ry": "0",
					"head2.rz": "-torad(var.hy)/1.2",
					"head2.tx": " (-sin(var.ls)/2 *limb_speed)*var.walk +clamp(-torad(var.hy)*2, -4, 4)",
					"head2.tz": " if(!is_on_ground&&is_in_water, -4, (0.5 +cos(var.ls)*2*limb_speed)*var.run +(sin(var.ls*2) -1)*limb_speed*var.walk ) -if(is_child, 9, 12.8)*var.eat +if(is_child, 3, 1) +sin(torad(45)+var.b)/6",
					"head2.ty": "-28.5 +if(!is_on_ground&&is_in_water, sin(var.swim)/2 +sin(torad(-45)+var.swim)/2, 0) -if(is_child, 2.5, 0.5)*var.eat",
					"head2.sx": "if(is_child, 2, 1)",
					"head2.sy": "head2.sx",
					"head2.sz": "head2.sx",
					"rotation.rx": "if(!is_on_ground&&is_in_water, torad(-10) +cos(var.swim)/10, (-sin(torad(90)+var.ls)/6*limb_speed)*var.run +(sin(torad(45)+var.ls*2)/14*limb_speed)*var.walk ) +sin(var.b-torad(90))/60 +torad(10)*var.eat",
					"rotation.ry": "(-sin(var.ls)/24*limb_speed)*var.run +(-sin(var.ls)/10*limb_speed)*var.walk",
					"rotation.rz": "-torad(var.hy)/10*clamp(1-limb_speed*2, 0, 1)",
					"rotation.tx": "(-sin(var.ls)/2 *limb_speed)*var.walk",
					"rotation.ty": "if(!is_on_ground&&is_in_water, sin(torad(-45)+var.swim)/2, (sin(torad(-135)+var.ls*2)/4*limb_speed)*var.walk ) -18.5",
					"rotation.tz": "if(!is_on_ground&&is_in_water, -5, (limb_speed/2 +sin(torad(45)+var.ls)*limb_speed)*var.run +((-1*limb_speed) +sin(var.ls*2)*limb_speed)*var.walk ) -4.2 +sin(var.b)/6 -3*var.eat"
				},
				{
					"leg1.rx": " sin(var.b)/60           +if(!is_on_ground&&is_in_water,  sin(var.swim)/2, (sin(torad( 0 -22.5)+var.ls)/2 +clamp(sin(torad( 90-22.5)+var.ls)/3, torad(-20), 0) +torad(5))*limb_speed*var.run +(asin(sin(torad(-90 +20)+var.ls))/3*clamp(limb_speed*4, 0.4, 1) +clamp(sin(torad(  0 +20)+var.ls)/6, torad(-20), 0)*clamp(limb_speed*4, 0, 1) )*var.walk ) -torad(var.hy)/24*clamp(1-limb_speed*2, 0, 1)",
					"leg2.rx": " sin(var.b)/60           +if(!is_on_ground&&is_in_water, -sin(var.swim)/2, (sin(torad(-90     )+var.ls)/2 +clamp(sin(torad( 0      )+var.ls)/3, torad(-20), 0) +torad(5))*limb_speed*var.run +(asin(sin(torad( 90 +20)+var.ls))/3*clamp(limb_speed*4, 0.4, 1) +clamp(sin(torad(180 +20)+var.ls)/6, torad(-20), 0)*clamp(limb_speed*4, 0, 1) )*var.walk ) +torad(var.hy)/24*clamp(1-limb_speed*2, 0, 1)",
					"leg3.rx": "-sin(var.b)/60 -torad(2) +if(!is_on_ground&&is_in_water, -cos(var.swim)/2, (sin(torad( 90     )+var.ls)/2 +clamp(sin(torad( 0      )+var.ls)/3, 0, torad( 20)) +torad(5))*limb_speed*var.run +(asin(sin(torad(180    )+var.ls))/3*clamp(limb_speed*4, 0.4, 1) +clamp(sin(torad( 90    )+var.ls)/4, 0, torad( 20))*clamp(limb_speed*4, 0, 1) )*var.walk ) -torad(var.hy)/24*clamp(1-limb_speed*2, 0, 1) +torad(3)*var.eat",
					"leg4.rx": "-sin(var.b)/60 -torad(2) +if(!is_on_ground&&is_in_water,  cos(var.swim)/2, (sin(torad(180-22.5)+var.ls)/2 +clamp(sin(torad( 90-22.5)+var.ls)/3, 0, torad( 20)) +torad(5))*limb_speed*var.run +(asin(sin(torad( 0     )+var.ls))/3*clamp(limb_speed*4, 0.4, 1) +clamp(sin(torad(-90    )+var.ls)/4, 0, torad( 20))*clamp(limb_speed*4, 0, 1) )*var.walk ) +torad(var.hy)/24*clamp(1-limb_speed*2, 0, 1) +torad(3)*var.eat",
					"leg1.ry": "torad(-5)*clamp(1-limb_speed*8, 0, 1) +torad(var.hy)/10*clamp(1-limb_speed*2, 0, 1)",
					"leg2.ry": "torad( 5)*clamp(1-limb_speed*8, 0, 1) +torad(var.hy)/10*clamp(1-limb_speed*2, 0, 1)",
					"leg3.ry": "torad( 5)*clamp(1-limb_speed*8, 0, 1) +torad(var.hy)/10*clamp(1-limb_speed*2, 0, 1) -torad(5)*var.eat",
					"leg4.ry": "torad(-5)*clamp(1-limb_speed*8, 0, 1) +torad(var.hy)/10*clamp(1-limb_speed*2, 0, 1) +torad(5)*var.eat",
					"leg1.rz": "                                               torad(var.hy)/20*clamp(1-limb_speed*2, 0, 1)",
					"leg2.rz": "                                               torad(var.hy)/20*clamp(1-limb_speed*2, 0, 1)",
					"leg3.rz": "if(!is_on_ground&&is_in_water, torad( 10), 0) -torad(var.hy)/16*clamp(1-limb_speed*2, 0, 1)",
					"leg4.rz": "if(!is_on_ground&&is_in_water, torad(-10), 0) -torad(var.hy)/16*clamp(1-limb_speed*2, 0, 1)",
					"leg1.tx": " -2.5 * var.child_scale",
					"leg2.tx": "  2.5 * var.child_scale",
					"leg3.tx": "(-2.5 +if(!is_on_ground&&is_in_water, -2, 0) ) * var.child_scale",
					"leg4.tx": "( 2.5 +if(!is_on_ground&&is_in_water,  2, 0) ) * var.child_scale",
					"leg1.ty": "( 24 + if(!is_on_ground&&is_in_water, 4 +cos(var.swim)*1.5, clamp( (-2 +sin(torad( 90-22.5)+var.ls)*2)*limb_speed*var.run +( sin(torad( 0  +20)+var.ls)*2*clamp(limb_speed*4, 0, 1))*var.walk, -4, 0)) ) * var.child_scale +if(is_child, 12, 0)",
					"leg2.ty": "( 24 + if(!is_on_ground&&is_in_water, 4 -cos(var.swim)*1.5, clamp( (-2 +sin(torad( 0      )+var.ls)*2)*limb_speed*var.run +( sin(torad(180 +20)+var.ls)*2*clamp(limb_speed*4, 0, 1))*var.walk, -4, 0)) ) * var.child_scale +if(is_child, 12, 0)",
					"leg3.ty": "( 24 + if(!is_on_ground&&is_in_water, 2 +sin(var.swim)*1.5, clamp( (-2 +sin(torad(180     )+var.ls)*2)*limb_speed*var.run +( sin(torad(-90    )+var.ls)*2*clamp(limb_speed*4, 0, 1))*var.walk, -4, 0)) ) * var.child_scale +if(is_child, 12, 0)",
					"leg4.ty": "( 24 + if(!is_on_ground&&is_in_water, 2 -sin(var.swim)*1.5, clamp( (-2 +sin(torad(-90-22.5)+var.ls)*2)*limb_speed*var.run +( sin(torad( 90    )+var.ls)*2*clamp(limb_speed*4, 0, 1))*var.walk, -4, 0)) ) * var.child_scale +if(is_child, 12, 0)",
					"leg1.tz": "(  7 + if(!is_on_ground&&is_in_water,  sin(var.swim)*6, (sin(torad( 0 -22.5)+var.ls)*6 +1)*limb_speed*var.run +( asin(sin(torad(-90 +20)+var.ls))*4*clamp(limb_speed*4, 0.4, 1))*var.walk ) ) * var.child_scale",
					"leg2.tz": "(  7 + if(!is_on_ground&&is_in_water, -sin(var.swim)*6, (sin(torad(-90     )+var.ls)*6 +1)*limb_speed*var.run +( asin(sin(torad( 90 +20)+var.ls))*4*clamp(limb_speed*4, 0.4, 1))*var.walk ) ) * var.child_scale",
					"leg3.tz": "( -5 + if(!is_on_ground&&is_in_water, -cos(var.swim)*6, (sin(torad( 90     )+var.ls)*6 +1)*limb_speed*var.run +( asin(sin(torad(180    )+var.ls))*4*clamp(limb_speed*4, 0.4, 1))*var.walk ) ) * var.child_scale",
					"leg4.tz": "( -5 + if(!is_on_ground&&is_in_water,  cos(var.swim)*6, (sin(torad(180-22.5)+var.ls)*6 +1)*limb_speed*var.run +( asin(sin(torad( 0     )+var.ls))*4*clamp(limb_speed*4, 0.4, 1))*var.walk ) ) * var.child_scale"
				},
				{
					"r_eye_top.ty": "        clamp(head_pitch/120, -0.1, 0.4) +(-1.5 -cos(limb_swing/3)/2)/4*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"l_eye_top.ty": "        clamp(head_pitch/120, -0.1, 0.4) +(-1.5 -cos(limb_swing/3)/2)/4*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"right_blink.sy": "clamp((1.5 -abs(sin(var.r+age/9.5)*6))*clamp(-32 +cos((var.r+age/9.5)/1.5)*40 +cos((var.r+age/9.5)/4)*40, 0, 1), 0, 1)",
					"left_blink.sy": " clamp((1.5 -abs(sin(var.r+age/9.5)*6))*clamp(-32 +cos((var.r+age/9.5)/1.5)*40 +cos((var.r+age/9.5)/4)*40, 0, 1), 0, 1)",
					"right_ear.rx": "-torad(head_pitch)/2 +torad( 0 +45*clamp( (  sin(       pi/4 +(var.r+age)/2 ) +sin(       (var.r+age) )  ) *var.Rear -1 , 0 , 1 ) )",
					"left_ear.rx": " -torad(head_pitch)/2 +torad( 0 +45*clamp( (  sin(       pi/4 +(var.r+age)/2 ) +sin(       (var.r+age) )  ) *var.Lear -1 , 0 , 1 ) )",
					"right_ear.ry": "torad(20*limb_speed)  +torad(     60*clamp( (  sin(-pi/8 +pi/4 +(var.r+age)/2 ) +sin(-pi/8 +(var.r+age) )  ) *var.Rear -1 , 0 , 1 ) )",
					"left_ear.ry": "-torad(20*limb_speed)  +torad(    -60*clamp( (  sin(-pi/8 +pi/4 +(var.r+age)/2 ) +sin(-pi/8 +(var.r+age) )  ) *var.Lear -1 , 0 , 1 ) )",
					"right_ear.rz": "clamp(-torad(head_pitch)/2 +(-cos(pi/4+var.ls +cos(pi/4+var.ls)/3)/2*limb_speed )*var.run +(-cos(var.ls*2 +sin(var.ls*2)/2)/3*limb_speed)*var.walk +torad(var.hy)/6 -torad(10) +sin(torad(-45)+var.b)/20, -pi/2, pi/2 )",
					"left_ear.rz": " clamp( torad(head_pitch)/2 +( cos(pi/4+var.ls +cos(pi/4+var.ls)/3)/2*limb_speed )*var.run +( cos(var.ls*2 +sin(var.ls*2)/2)/3*limb_speed)*var.walk +torad(var.hy)/6 +torad(10) -sin(torad(-45)+var.b)/20, -pi/2, pi/2 )"
				},
				{
					"right_eye.sz": "if(between(player_pos_x-pos_x, -30, 30)&&between(player_pos_y-pos_y, -30, 30)&&between(player_pos_z-pos_z, -30, 30), 1, 2)",
					"left_eye.sz": "right_eye.sz",
					"right_eyelid.sz": "if(right_eyelid.sy==0||right_blink.sy==0, 0, 1)",
					"right_eyelid.tz": "0",
					"left_eyelid.sz": "if(left_eyelid.sy==0||left_blink.sy==0, 0, 1)",
					"left_eyelid.tz": "0"
				},
				{
					"head_part.rx": "head2.rx",
					"head_part.ry": "head2.ry",
					"head_part.rz": "head2.rz",
					"head_part.tx": "head2.tx",
					"head_part.ty": "head2.ty+19",
					"head_part.tz": "head2.tz-2",
					"head_part.sx": "head2.sx",
					"head_part.sy": "head2.sy",
					"head_part.sz": "head2.sz",
					"body_part.rx": "rotation.rx",
					"body_part.ry": "rotation.ry",
					"body_part.rz": "rotation.rz",
					"body_part.tx": "rotation.tx",
					"body_part.ty": "rotation.ty+19",
					"body_part.tz": "rotation.tz-2"
				}
			]
		},
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "leg1",
			"id": "leg1",
			"invertAxis": "xy",
			"translate": [-3, 0, -7],
			"texture": "sheep.png",
			"textureSize": [64, 32],
			"boxes": [
				{"coordinates": [1, 0, 5, 4, 12, 4], "textureOffset": [0, 16]}
			]
		},
		{
			"part": "leg2",
			"id": "leg2",
			"invertAxis": "xy",
			"mirrorTexture": "u",
			"translate": [3, 0, -7],
			"texture": "sheep.png",
			"textureSize": [64, 32],
			"boxes": [
				{"coordinates": [-5, 0, 5, 4, 12, 4], "textureOffset": [0, 16]}
			]
		},
		{
			"part": "leg3",
			"id": "leg3",
			"invertAxis": "xy",
			"translate": [-3, 0, 5],
			"texture": "sheep.png",
			"textureSize": [64, 32],
			"boxes": [
				{"coordinates": [1, 0, -7, 4, 12, 4], "textureOffset": [0, 16]}
			]
		},
		{
			"part": "leg4",
			"id": "leg4",
			"invertAxis": "xy",
			"mirrorTexture": "u",
			"translate": [3, 0, 5],
			"texture": "sheep.png",
			"textureSize": [64, 32],
			"boxes": [
				{"coordinates": [-5, 0, -7, 4, 12, 4], "textureOffset": [0, 16]}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "leg1",
			"id": "leg1",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "leg2",
			"id": "leg2",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "leg3",
			"id": "leg3",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "leg4",
			"id": "leg4",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "leg1",
			"id": "leg1",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "leg2",
			"id": "leg2",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "leg3",
			"id": "leg3",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "leg4",
			"id": "leg4",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		}
	]
}